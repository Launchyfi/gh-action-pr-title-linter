name: PR Title Linter

description: Lints the PR title to ensure it contains a ticket ID or [NO-TICKET]

inputs:
  pr-title:
    description: The title of the PR
    required: true

  ticket-prefix:
    description: Comma-separated list of valid ticket prefixes (e.g. `FOO,BAR,BAZ`).
    required: true

runs:
  using: composite
  steps:
    - name: Lint PR title
      shell: bash
      env:
        PR_TITLE: ${{ inputs.pr-title }}
        TICKET_PREFIX: ${{ inputs.ticket-prefix }}
      run: |
        echo "PR title: $PR_TITLE"

        # Functions for colored output
        print_red() { 
          echo -e "\033[31m$1\033[0m" 
        }

        print_green() { 
          echo -e "\033[32m$1\033[0m" 
        }

        #  Loop through each prefix in the comma-separated list
        for CURRENT_PREFIX in ${TICKET_PREFIX//,/ }; do
          # Escape special regex characters in TICKET_PREFIX
          ESCAPED_TICKET_PREFIX=$(printf '%q' "$CURRENT_PREFIX")

          # Define regex patterns
          TICKET_REGEX="^\[((${ESCAPED_TICKET_PREFIX}-[0-9]+)(,[[:space:]]*${ESCAPED_TICKET_PREFIX}-[0-9]+)*)\]"
          NO_TICKET_REGEX="^\[NO-TICKET\]"

          echo ""
          echo "Running check for prefix: $ESCAPED_TICKET_PREFIX"
          if [[ $PR_TITLE =~ $TICKET_REGEX ]] || [[ $PR_TITLE =~ $NO_TICKET_REGEX ]]; then
            ## When we find a valid prefix, we can break out of the script
            print_green "✅ PR title is valid."
            exit 0
          else

            print_red "❌ PR title is invalid."
            echo ""
            print_red "### Expected PR Title Format:"
            print_red "- The PR title must start with either [${CURRENT_PREFIX}-<number>], multiple ticket IDs like [${CURRENT_PREFIX}-<number>, ${CURRENT_PREFIX}-<number>], or [NO-TICKET]."
            echo ""
            print_red "### Examples:"
            print_red "- [${CURRENT_PREFIX}-123] Add new authentication method"
            print_red "- [${CURRENT_PREFIX}-123, ${CURRENT_PREFIX}-456] Implement new features"
            print_red "- [NO-TICKET] Fix typo in documentation"
            echo ""
            print_red "Please update your PR title to match the required format."
          fi
        done

        # Add error message to GitHub Actions logs
        echo "::error title=Invalid PR Title::The provided PR title is invalid, check the logs for more information on the possible values."
        exit 1
